<?php

// [NOSTRIP
// -----------------------------------------------------------------
// AreaEdit by DTLink, LLC. 
// http://www.dtlink.com and http://www.formvista.com
//
// This file is based on work by:
//
// Copyright (C) Gogo Code.
// http://code.gogo.co.nz
//
// -----------------------------------------------------------------
// This code is distributed under the the sames terms as Xinha
// itself. (HTMLArea license based on the BSD license) 
// 
// Please read license.txt in this package for details.
//
// All software distributed under the Licenses is provided strictly on
// an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR
// IMPLIED, AND DTLINK LLC HEREBY DISCLAIMS ALL SUCH
// WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
// OR NON-INFRINGEMENT. 
// ------------------------------------------------------------------
// NOSTRIP]

/**
* Plugin Chooser implementation.
*
* To use the unified backend you must first include the backend_conf.php file which
* is generated by Configure.php.
*/

/**
* Configure.php generated config file for PHP unified backend.
*/

include_once( "../backends/backend_conf.php" );

?><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>AreaEdit Plugin Chooser</title>
  <link rel="stylesheet" href="<? echo AREAEDIT_INSTALL_URL; ?>/examples/examples.css" />

  <script type="text/javascript">

    // You must set _editor_url to the URL (including trailing slash) where AreaEdit
	 // is installed. 
	 //
	 // Before we had the central config, this is the way it was done.
	 //
    // _editor_url  = document.location.href.replace(/examples\/full_example-body\.html.*/, '')

    _editor_url  = "<? echo AREAEDIT_INSTALL_URL; ?>";
    _editor_lang = "en";      // And the language we need to use in the editor.

  </script>

  <!--  load in debug trace message class -->

  <script type="text/javascript" src="<? echo AREAEDIT_INSTALL_URL; ?>/ddt/ddt.js"></script>

  <!-- create a global trace message object -->

  <script type="text/javascript">
   var startupDDT = new DDT( "startup" );

	// uncomment this to turn on debugging messages for the startup section

   // startupDDT._ddtOn();

	startupDDT._ddt( "full_example-body.php", "81", "ddt object created on calling page" );
  </script>
  
  <!-- Load up the actual editor core -->
  <script type="text/javascript" src="<? echo AREAEDIT_INSTALL_URL; ?>/htmlarea.js"></script>

  <script type="text/javascript">
    areaedit_editors = null;
    areaedit_init    = null;
    areaedit_config  = null;
    areaedit_plugins = null;

    // This contains the names of textareas we will make into AreaEdit editors
    areaedit_init = areaedit_init ? areaedit_init : function()
		{


		// This is a workaround for a bug in MSIE that sometimes produces
		// "Operation Aborted" errors. The error comes from the fact that
		// MSIE will /sometimes/ call the onload handler before the DOM
		// heirarchy is completely built. 
		//
		// So we do not run this function until the page has completely 
		// loaded if we are MSIE.

		if ( HTMLArea.is_ie && document.readyState != "complete" )
			{
			setTimeout( function() { areaedit_init()}, 50 );
			return false;
			}

		// Initialize the HTMLArea class. (Used to be at the bottom of htmlarea.js)

		HTMLArea.init();

      /** STEP 1 ***************************************************************
       * First, what are the plugins you will be using in the editors on this
       * page.  List all the plugins you will need, even if not all the editors
       * will use all the plugins.
       ************************************************************************/

      areaedit_plugins = areaedit_plugins ? areaedit_plugins :
      [
       'CharacterMap',
       'ContextMenu',
       'FullScreen',
       'ListType',
       'SpellChecker',
       'Stylist',
       'SuperClean',
       'TableOperations'
      ];

		// THIS BIT OF JAVASCRIPT LOADS THE PLUGINS, NO TOUCHING  :)
		if (!HTMLArea.loadPlugins(areaedit_plugins, areaedit_init)) 
			return;

      /** STEP 2 ***************************************************************
       * Now, what are the names of the textareas you will be turning into
       * editors?
       ************************************************************************/

      areaedit_editors = areaedit_editors ? areaedit_editors :
      [
        'myTextArea',
        'anotherOne'
      ];

      /** STEP 3 ***************************************************************
       * We create a default configuration to be used by all the editors.
       * If you wish to configure some of the editors differently this will be
       * done in step 4.
       *
       * If you want to modify the default config you might do something like this.
       *
       *   areaedit_config = new HTMLArea.Config();
       *   areaedit_config.width  = 640;
       *   areaedit_config.height = 420;
       *
       *************************************************************************/

       areaedit_config = areaedit_config ? areaedit_config : new HTMLArea.Config();

      /** STEP 3 ***************************************************************
       * We first create editors for the textareas.
       *
       * You can do this in two ways, either
       *
       *   areaedit_editors   = HTMLArea.makeEditors(areaedit_editors, areaedit_config, areaedit_plugins);
       *
       * if you want all the editor objects to use the same set of plugins, OR;
       *
       *   areaedit_editors = HTMLArea.makeEditors(areaedit_editors, areaedit_config);
       *   areaedit_editors['myTextArea'].registerPlugins(['Stylist','FullScreen']);
       *   areaedit_editors['anotherOne'].registerPlugins(['CSS','SuperClean']);
       *
       * if you want to use a different set of plugins for one or more of the
       * editors.
       ************************************************************************/

      areaedit_editors   = HTMLArea.makeEditors(areaedit_editors, areaedit_config, areaedit_plugins);

      /** STEP 4 ***************************************************************
       * If you want to change the configuration variables of any of the
       * editors,  this is the place to do that, for example you might want to
       * change the width and height of one of the editors, like this...
       *
       *   areaedit_editors.myTextArea.config.width  = 640;
       *   areaedit_editors.myTextArea.config.height = 480;
       *
       ************************************************************************/


      /** STEP 5 ***************************************************************
       * Finally we "start" the editors, this turns the textareas into
       * AreaEdit editors.
       ************************************************************************/

      HTMLArea.startEditors(areaedit_editors);
    }

    // calling areaedit_init twice can cause a nasty little exception.
    // window.onload = areaedit_init;

  </script>
</head>

<body onload="areaedit_init()">

  <form id="editors_here">
    <textarea id="myTextArea" name="myTextArea" rows="10" cols="80" style="width:100%"></textarea>
  </form>


  <!----------------------------------------------------------------------------
    -                            !! IMPORTANT !!
    -  The html and javascript below is the code used to create the example page.
    -  It renders a lot of the above unused because it pre-fills areaedit_editors,
    -  areaedit_config and areaedit_plugins for you, and creates new textareas in place
    -  of the ones above. The items above are not used while the example is being
    -  used!
    -
    -  If you are going to take the code in this file to form the basis of your
    -  own, then leave out this marked area.
    --------------------------------------------------------------------------->

    <div id="lipsum" style="display:none"><h1>TEST</h1></div>

        <div id="lipsumx" style="display:none">
          <p>This is an AreaEdit editor.

			 <p>For more information see the README.txt and README_DEVELOPERS.txt
			 files.</p>
        </div>

    <script src="plugin_chooser.js"></script>

  <!--------------------------------------------------------------------------->


</body>
</html>
